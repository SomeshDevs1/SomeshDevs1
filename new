public UserDto buildUserDtoFromToken(Map<String, Object> tokenAttributes, int idModule) {
    UserDto userDto = new UserDto();

    // Basic info
    userDto.setLoginSesame((String) tokenAttributes.get("preferred_username"));
    userDto.setFirstName((String) tokenAttributes.get("given_name"));
    userDto.setName((String) tokenAttributes.get("family_name"));
    userDto.setLoginEmail((String) tokenAttributes.get("email"));

    // Parse business groups / teams from token
    List<BusinessGroupDto> teams = extractBusinessGroups(tokenAttributes);

    // Business areas
    Set<String> businessAreas = new TreeSet<>();
    for (BusinessGroupDto team : teams) {
        if (team.getArea() != null) {
            businessAreas.add(team.getArea());
        }
    }

    // Set data
    userDto.setUserGroup(teams);
    userDto.setBusinessAreas(businessAreas);
    userDto.setCountry(getCountryLabelByTeam(teams.get(0).getId()));  // or extract from token if available

    // Modules
    List<ModuleDto> modules = extractUserModules(tokenAttributes, idModule);
    userDto.setUserModule(modules);

    // Optional flags (just examples)
    userDto.setNotAssignedToJustIndTeams(Boolean.FALSE.toString());

    return userDto;
}
Map<String, Object> tokenAttributes = ((BearerTokenAuthentication) authentication).getTokenAttributes();

LOGGER.info("=== SGIAM Token Data Start ===");
userDataFromSgiam.forEach((k, v) -> LOGGER.info("{} : {}", k, v));
LOGGER.info("=== SGIAM Token Data End ===");
