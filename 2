private List<ModuleDto> extractUserModules(Map<String, Object> tokenAttributes, int idModule) {
    List<ModuleDto> moduleDtos = new ArrayList<>();

    List<Map<String, Object>> userAuthorizationList =
            (List<Map<String, Object>>) tokenAttributes.get("user_authorization");

    if (userAuthorizationList == null) return moduleDtos;

    for (Map<String, Object> authEntry : userAuthorizationList) {
        List<Map<String, Object>> permissions =
                (List<Map<String, Object>>) authEntry.get("permissions");

        if (permissions == null) continue;

        for (Map<String, Object> permission : permissions) {
            List<Map<String, Object>> constraints =
                    (List<Map<String, Object>>) permission.get("constraints");

            if (constraints == null) continue;

            String userType = null;
            String businessRole = null;
            String applicationRole = null;
            List<String> moduleNames = new ArrayList<>();

            // First loop to extract all constraint values before creating ModuleDto
            for (Map<String, Object> constraint : constraints) {
                String name = (String) constraint.get("name");
                List<String> values = (List<String>) constraint.get("values");

                if (name == null || values == null || values.isEmpty()) continue;

                switch (name) {
                    case "User Type" -> userType = values.get(0);
                    case "Business Role" -> businessRole = values.get(0);
                    case "ApplicationRole" -> applicationRole = values.get(0);
                    case "MODULE" -> moduleNames.addAll(values); // Get all modules
                }
            }

            // Now create a ModuleDto per module name
            for (String moduleName : moduleNames) {
                ModuleDto moduleDto = new ModuleDto();
                moduleDto.setId(String.valueOf(idModule)); // or set a new id each time if needed
                moduleDto.setUserType(userType);
                moduleDto.setBusinessRole(businessRole);
                moduleDto.setApplicationRole(applicationRole);
                moduleDto.setModuleName(moduleName);

                moduleDtos.add(moduleDto);
            }
        }
    }

    return moduleDtos;
}